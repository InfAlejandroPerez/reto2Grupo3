package controlador.json;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.json.simple.JSONObject;

import database.DBController;
import modelo.Modelo;
import modelo.Municipios;
import modelo.MunicipiosId;

public class MunicipiosController extends JsonController {

	public MunicipiosController(JsonParse parser, Modelo modelo) {
		super(parser, modelo);
	}
	
	
	/**
	 * Recibe un objeto json y devuelve un objeto Municipios extrayendo sus datos
	 * Si el municipio ya existe en la BBDD devolverá una instancia del mismo
	 * @param objetoJSON
	 * @param municipioKey
	 * @param nombreKey
	 * @param descripcionKey
	 * @param pro
	 * @return
	 */
	protected Municipios getMunicipio(JSONObject objetoJSON, int codProvincia) {
        int codMunicipio = Integer.parseInt((String) objetoJSON.get("municipalitycode"));
    	Municipios mun = this.modelo.getDBController().getMunicipio(codMunicipio, codProvincia);
    	if(mun == null) {
    		mun = new Municipios();
    		mun.setNombre((String) objetoJSON.get("documentName"));
    		mun.setId(new MunicipiosId(codMunicipio, codProvincia));
         	mun.setDescripcion(this.parser.htmlToPlainText((String) objetoJSON.get("turismDescription")));
    	}
     	
     	return mun;
	}

	/**
	 * Recibe el nombre de un municipio, busca sus códigos en el csv de Municipios, inserta el nuevo municipio en la BBDD y devuelve el objeto creado
	 * TODO: controlar excepciones en este metodo, no válido para pueblos que no existen en el csv
	 * @param nombre
	 * @return
	 */
	protected Municipios createMunicipioFromName(String nombre) {
		Session sesion = this.modelo.getDBController().getCurrentSession();
		int codMunicipio = getMunicipioId(nombre);
		int codProvincia = getProvinciaId(nombre);
		Transaction transaction = sesion.beginTransaction();
		
		//Provincia provincia = sesion.get(Provincia.class, codProvincia);
		MunicipiosId id = new MunicipiosId(codMunicipio, codProvincia);
		Municipios newMunicipio = new Municipios(id, nombre);
		
		sesion.save(newMunicipio);
		transaction.commit();
		
		return newMunicipio;
	}
	
}

package controlador.json;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import modelo.Estaciones;
import modelo.Modelo;
import modelo.Municipios;

public class EstacionesController extends JsonController {

	public EstacionesController(JsonParse parser, Modelo modelo) {
		super(parser, modelo);
	}

	/**
	 * Lee el archivo json de estaciones y las inserta en la BBDD
	 * Si no existe el pueblo de una estación lo crea e inserta también
	 * @param path  String  Ruta del archivo
	 */
	private void insertEstaciones(String path) {
		JSONArray estaciones = getJSONArray(path, false);
		
		Session session = this.modelo.getDBController().openSession();
		Transaction transaction = session.beginTransaction();

		for(int i = 0 ; i < estaciones.size() ; i++ ) {

			JSONObject estacion = (JSONObject) estaciones.get(i);
			String nombrePueblo = (String) estacion.get("Town");
			Municipios mun = this.modelo.getDBController().getMunicipio(nombrePueblo);
			
			// Si no encuentro el municipio por el nombre busco su id en el csv de municipios
			if(mun == null) {
				int codMunicipio = getMunicipioId(nombrePueblo);
				int codProvincia = getProvinciaId(nombrePueblo);
				mun = this.modelo.getDBController().getMunicipio(codMunicipio, codProvincia);
				
				// Si no existe un municipio con ese id en la BBDD lo inserto
				if(mun == null)
					mun = munController.createMunicipioFromName(nombrePueblo);
			}
			
			Estaciones es = getEstacion(estacion, mun, session);
			session.save(es);
		}
		
		transaction.commit();
		session.close();
	}
}
